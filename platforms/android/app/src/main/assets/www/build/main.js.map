{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/mqtt.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 108\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 149;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 149\n// module chunks = 0","import { Component} from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { MqttService } from './mqtt.service';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n  providers: [MqttService]\n})\nexport class HomePage{\n\n  public valores = {\n    temp: \"\", //valor da ultima temperatura lida\n    umAr: \"\", //valor da ultima umidade do ar lida\n    umSolo: \"\", //valor da ultima umidade do solo lida\n    lumin: \"\", //valor da ultima luminosidade lida\n  };\n\n  constructor(public navCtrl: NavController, public mqtt_service: MqttService) {\n    this.valores['temp'] = \"Não medido\";\n    this.valores['umAr'] = \"Não medido\";\n    this.valores['umSolo'] = \"Não medido\";\n    this.valores['lumin'] = \"Não medido\";\n    this.iniciar();\n  }\n\n  iniciar() {\n    this.mqtt_service.conectar();\n  }\n\n  irrigar(){\n    this.mqtt_service.sendMessage(\"Funcao Irrigar\");\n  }\n\n  public medirTemp() {\n    // this.mqtt_service.sendMessage(\"1\",\"REQUISICAO/TEMPERATURA/ST01\");\n    this.valores['temp'] = \"25º C\";\n    console.log(\"medindo temp\")\n  }\n  public medirUmidAr() {\n    // this.mqtt_service.sendMessage(\"1\",\"REQUISICAO/UMIDADE_AR/SUA01\");\n    this.valores['umAr'] = \"Ameno\";\n    console.log(\"medindo umidade ar\")\n  }\n  public medirUmidSolo() {\n    // this.mqtt_service.sendMessage(\"1\",\"REQUISICAO/UMIDADE_SOLO/SUS01\");\n    this.valores['umSolo'] = \"Úmido\"\n    console.log(\"medindo umidade terra\")\n  }\n  public medirLuminosidade() {\n    // this.mqtt_service.sendMessage(\"1\",\"REQUISICAO/LUMINOSIDADE/SL01\");\n    this.valores['lumin'] = \"Alta\";\n    console.log(\"medindo luminosidade\")\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Paho } from 'ng2-mqtt/mqttws31';\n\nexport class MqttService {\n\n    client;\n\n    constructor() {}\n\n    conectar() {\n        console.log(\"Entrou\");\n        this.client = new Paho.MQTT.Client('192.168.5.101', 1884, 'Felipe');\n\n        this.onMessage();\n        this.onConnectionLost();\n        this.client.connect({ onSuccess: this.onConnected.bind(this), onFailure : this.onFalha.bind(this) });\n        console.log(\"Saiu\");\n    }\n\n    onConnected() {\n        console.log(\"Connected: KD\");\n        this.client.subscribe(\"REQUISICAO/IRRIGAR\");\n        // this.sendMessage('Contrutor');\n    }\n\n    onFalha(){\n        console.log(\"Falhou\");\n    }\n\n    sendMessage(message: string) {\n        let packet = new Paho.MQTT.Message(message);\n        packet.destinationName = \"REQUISICAO/IRRIGAR\";\n        this.client.send(packet);\n    }\n\n    onMessage() {\n        this.client.onMessageArrived = (message: Paho.MQTT.Message) => {\n            console.log('Message arrived : ' + message.payloadString);\n        };\n    }\n\n    onConnectionLost() {\n        this.client.onConnectionLost = (responseObject: Object) => {\n            console.log('Connection lost : ' + JSON.stringify(responseObject));\n            this.client.connect({ onSuccess: this.onConnected.bind(this), onFailure: this.onFalha.bind(this) })\n        };\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/mqtt.service.ts"],"sourceRoot":""}